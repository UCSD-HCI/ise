<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Multitouch.Framework.WPF</name>
    </assembly>
    <members>
        <member name="T:Multitouch.Framework.WPF.Controls.RandomCanvas">
            <summary>
            Places child elements at random position.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.RandomCanvas.RandomizePositionsProperty">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Controls.RandomCanvas.RandomizePositionsProperty"/> dependency property.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.RandomCanvas.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a <see cref="T:System.Windows.Controls.Canvas"/> element.
            </summary>
            <param name="arrangeSize">The size that this <see cref="T:System.Windows.Controls.Canvas"/> element should use to arrange its child elements.</param>
            <returns>
            A <see cref="T:System.Windows.Size"/> that represents the arranged size of this <see cref="T:System.Windows.Controls.Canvas"/> element and its descendants.
            </returns>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.RandomCanvas.RandomizePositions">
            <summary>
            Gets or sets a value indicating whether items position will be randomized.
            </summary>
            <value><c>true</c> if items position will be randomized; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Multitouch.Framework.WPF.Input.NewContactEventArgs">
            <summary>
            Provides information about a new contact.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Input.ContactEventArgs">
            <summary>
            Information about contacts.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.ContactEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes event handlers in a type-specific way, which can increase event system efficiency.
            </summary>
            <param name="genericHandler">The generic handler to call in a type-specific way.</param>
            <param name="genericTarget">The target to call the handler on.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.ContactEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Gets the position relative to <see cref="T:System.Windows.IInputElement"/>.
            </summary>
            <param name="relativeTo">The relative to.</param>
            <returns></returns>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.ContactEventArgs.Contact">
            <summary>
            Gets the contact.
            </summary>
            <value>The contact.</value>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.NewContactEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="genericHandler">The generic handler.</param>
            <param name="genericTarget">The generic target.</param>
        </member>
        <member name="T:Multitouch.Framework.WPF.Input.MultitouchScreen">
            <summary>
            Represents a Multitouch Screen.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewNewContactEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewNewContactEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactRemovedEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactRemovedEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactMovedEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactMovedEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.NewContactEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.NewContactEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactRemovedEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactRemovedEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactMovedEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactMovedEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactEnterEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactEnterEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactLeaveEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactLeaveEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.GotContactCaptureEvent">
            <summary>
            Idenitfies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.GotContactCaptureEvent"/> attached event.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Input.MultitouchScreen.LostContactCaptureEvent">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.LostContactCaptureEvent"/> attached event.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddNewContactHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.NewContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.NewContactEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemoveNewContactHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.NewContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.NewContactEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddContactMovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactMovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemoveContactMovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactMovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddContactRemovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactRemovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemoveContactRemovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactRemovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddContactEnterHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactEnterEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemoveContactEnterHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactEnterEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddContactLeaveHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactLeaveEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemoveContactLeaveHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.ContactLeaveEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddGotContactCaptureHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.GotContactCaptureEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemoveGotContactCaptureHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.GotContactCaptureEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddLostContactCaptureHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.LostContactCaptureEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemoveLostContactCaptureHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.LostContactCaptureEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddPreviewNewContactHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.NewContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewNewContactEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemovePreviewNewContactHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.NewContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewNewContactEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddPreviewContactRemovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactRemovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemovePreviewContactRemovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactRemovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.AddPreviewContactMovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Adds a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactMovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.RemovePreviewContactMovedHandler(System.Windows.DependencyObject,Multitouch.Framework.WPF.Input.ContactEventHandler)">
            <summary>
            Removes a handler for the <see cref="F:Multitouch.Framework.WPF.Input.MultitouchScreen.PreviewContactMovedEvent"/> attached event.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> or <see cref="T:System.Windows.ContentElement"/> that listens to this event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.MultitouchScreen.GetContactsCaptured(System.Windows.IInputElement)">
            <summary>
            Gets the contacts captured in specified element
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.MultitouchScreen.AllowNonContactEvents">
            <summary>
            Gets or sets a value indicating whether mouse events are allowed.
            </summary>
            <value><c>false</c> - all mouse events will be canceled in MultitouchLogic at PreProcessInput stage.</value>
        </member>
        <member name="T:Multitouch.Framework.WPF.Input.ContactEventHandler">
            <summary>
            Represents the method that will handle contact event.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Input.NewContactEventHandler">
            <summary>
            Represents the method that will handle a new contact event.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Input.Contact">
            <summary>
            Represents a contact.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.GetPosition(System.Windows.UIElement)">
            <summary>
            Get position relative to <see cref="T:System.Windows.UIElement"/>
            </summary>
            <param name="relativeTo">Position relative to this object. If <c>null</c>, then result will be relative to the root visual.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.GetPoints(System.Windows.UIElement)">
            <summary>
            Gets the history of points that was generated by this contact
            </summary>
            <param name="relativeTo">Positions relative to this object. If <c>null</c>, then result will be relative to the root visual.</param>
            <returns></returns>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
            <summary>
            Captures the specified element.
            </summary>
            <param name="element">The element.</param>
            <param name="captureMode">The capture mode.</param>
            <returns></returns>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.Capture(System.Windows.IInputElement)">
            <summary>
            Captures the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.ReleaseCapture">
            <summary>
            Releases the capture.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.SetUserData(System.Object,System.Object)">
            <summary>
            Sets user specified data
            </summary>
            <param name="key">Key</param>
            <param name="value">Data</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Input.Contact.GetUserData(System.Object)">
            <summary>
            Gets user specified data
            </summary>
            <param name="key">Key</param>
            <returns>User data</returns>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.Id">
            <summary>
            Id of this contact.
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.Target">
            <summary>
            When overridden in a derived class, gets the element that receives input from this device.
            </summary>
            <value></value>
            <returns>
            The element that receives input.
            </returns>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.DirectlyOver">
            <summary>
            Gets the directly over.
            </summary>
            <value>The directly over.</value>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.Captured">
            <summary>
            Gets the object that has captured this contact.
            </summary>
            <value>The captured.</value>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.ActiveSource">
            <summary>
            When overridden in a derived class, gets the <see cref="T:System.Windows.PresentationSource"/> that is reporting input for this device.
            </summary>
            <value></value>
            <returns>
            The source that is reporting input for this device.
            </returns>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.Area">
            <summary>
            Gets the area of contact
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.BoundingRect">
            <summary>
            Gets the bounding rect of contact
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.MajorAxis">
            <summary>
            Gets the major axis for an ellipse
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Input.Contact.MinorAxis">
            <summary>
            Gets the minor axis for an ellipse
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.InkCanvasStrokeErasingEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.InkCanvasStrokeErasingEventArgs.#ctor(System.Windows.Ink.Stroke)">
            <summary>
            
            </summary>
            <param name="stroke"></param>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.InkCanvasStrokeErasingEventArgs.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.ElementRoutedEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Gets the position relative to <see cref="T:System.Windows.IInputElement"/>.
            </summary>
            <param name="relativeTo">The relative to.</param>
            <returns></returns>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.DraggableScrollViewer">
            <summary>
            Extends <see cref="T:Multitouch.Framework.WPF.Controls.ScrollViewer"/> to respond to Multitouch events. It also has similar scrolling behavior like iPhone and dragging support and fires an event when an element is dragged out of it.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.ScrollViewer">
            <summary>
            Extends <see cref="T:System.Windows.Controls.ScrollViewer"/> to respond to Multitouch events. It also has similar scrolling behavior like iPhone.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.ScrollViewer.LinearDumpingProperty">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Controls.ScrollViewer.LinearDumpingProperty"/> dependency property.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.ScrollViewer.BorderSoftnessProperty">
            <summary>
            Identifies <see cref="F:Multitouch.Framework.WPF.Controls.ScrollViewer.BorderSoftnessProperty"/> dependency property.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.ScrollViewer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Multitouch.Framework.WPF.Controls.ScrollViewer"/> class.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.ScrollViewer.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.ScrollViewer.LinearDumping">
            <summary>
            Gets or sets the linear dumping. Controls the friction of scrolling
            </summary>
            <value>The linear dumping.</value>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.ScrollViewer.BorderSoftness">
            <summary>
            Gets or sets the border softness. Controls the force that is used to bump the content of borders.
            </summary>
            <value>The border softness.</value>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.Primitives.ScrollBar">
            <summary>
            ScrollBar that respond to Multitouch events
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.Primitives.Thumb">
            <summary>
            Extends <see cref="T:System.Windows.Controls.Primitives.Thumb"/> to receive Multitouch events.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.Primitives.Thumb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Multitouch.Framework.WPF.Controls.Primitives.Thumb"/> class.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.Window">
            <summary>
            Extends WPF <see cref="T:System.Windows.Window"/> to support Multitouch events. WindowStyle is None, WindowState is Maximized.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.Window.OnSourceInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Window.SourceInitialized"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Window.Closing"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Multitouch.Framework.WPF.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint">
            <summary>
            A joint that makes a single Body Pivot around an Anchor.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint.#ctor(Physics2DDotNet.Body,AdvanceMath.Vector2D,Physics2DDotNet.Lifespan,System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new instance of the <see cref="T:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint"/> class.
            </summary>
            <param name="body">The body.</param>
            <param name="anchor">The anchor.</param>
            <param name="lifetime">The lifetime.</param>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint.OnAdded(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Added"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint.Anchor">
            <summary>
            Gets or sets the anchor.
            </summary>
            <value>The anchor.</value>
        </member>
        <member name="P:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint.BiasFactor">
            <summary>
            Gets or sets the bias factor.
            </summary>
            <value>The bias factor.</value>
        </member>
        <member name="P:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint.Softness">
            <summary>
            Gets or sets the softness.
            </summary>
            <value>The softness.</value>
        </member>
        <member name="P:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint.DistanceTolerance">
            <summary>
            The distance the joint can stretch before breaking. 
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Physics.FixedSlidingHingeJoint.Bodies">
            <summary>
            Gets the bodies the Joint effects.
            </summary>
            <value></value>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.Primitives.RepeatButton">
            <summary>
            Extends <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> to support Multitouch events.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.Primitives.RepeatButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Multitouch.Framework.WPF.Controls.Primitives.RepeatButton"/> class.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.TouchablePanel">
            <summary>
            A Panel that can Move, Rotate and Scale it's child items and respons to Multitouch events.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.TouchablePanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Multitouch.Framework.WPF.Controls.TouchablePanel"/> class.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.TouchablePanel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Invoked when the <see cref="T:System.Windows.Media.VisualCollection"/> of a visual object is modified.
            </summary>
            <param name="visualAdded">The <see cref="T:System.Windows.Media.Visual"/> that was added to the collection.</param>
            <param name="visualRemoved">The <see cref="T:System.Windows.Media.Visual"/> that was removed from the collection.</param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.TouchablePanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a <see cref="T:System.Windows.Controls.Canvas"/> element.
            </summary>
            <param name="arrangeSize">The size that this <see cref="T:System.Windows.Controls.Canvas"/> element should use to arrange its child elements.</param>
            <returns>
            A <see cref="T:System.Windows.Size"/> that represents the arranged size of this <see cref="T:System.Windows.Controls.Canvas"/> element and its descendants.
            </returns>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.TouchablePanel.UpdateChildren">
            <summary> 
            Updates the child positions.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.TouchablePanel.MinScaleProperty">
            <summary>
            MinScale Dependency Property
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.TouchablePanel.MaxScaleProperty">
            <summary>
            MaxScale Dependency Property
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.TouchablePanel.IsScalableProperty">
            <summary>
            IsScalable Attached Dependency Property
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.TouchablePanel.GetIsScalable(System.Windows.DependencyObject)">
            <summary>
            Gets the IsScalable property.  This dependency property 
            indicates if the element is scalable.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.TouchablePanel.SetIsScalable(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsScalable property.  This dependency property 
            indicates if the element is scalable.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.TouchablePanel.LinearDampingProperty">
            <summary>
            LinearDamping Dependency Property
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.TouchablePanel.AngularDampingProperty">
            <summary>
            AngularDamping Dependency Property
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Controls.TouchablePanel.EnableWallsProperty">
            <summary>
            EnableWalls Dependency Property
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.TouchablePanel.MinScale">
            <summary>
            Gets or sets the MinScale property.  This dependency property 
            indicates the minimum scaling factor for this panel's children.
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.TouchablePanel.MaxScale">
            <summary>
            Gets or sets the MaxScale property.  This dependency property 
            indicates the maximum scaling factor for this panel's children.
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.TouchablePanel.LinearDamping">
            <summary>
            Gets or sets the LinearDamping property.  This dependency property 
            indicates the linear damping of the children of this panel.
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.TouchablePanel.AngularDamping">
            <summary>
            Gets or sets the AngularDamping property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.TouchablePanel.EnableWalls">
            <summary>
            Gets or sets the EnableWalls property.  This dependency property 
            indicates if the elements bounce in the walls of the Panel.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.Button">
            <summary>
            Extends <see cref="T:System.Windows.Controls.Button"/> to receive Multitouch events.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.Button.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Multitouch.Framework.WPF.Controls.Button"/> class.
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Native.NativeMethods.POINT">
            <summary>
            Wrapper around the Winapi POINT type.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Native.NativeMethods.POINT.X">
            <summary>
            The X Coordinate.
            </summary>
        </member>
        <member name="F:Multitouch.Framework.WPF.Native.NativeMethods.POINT.Y">
            <summary>
            The Y Coordinate.
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Native.NativeMethods.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new POINT.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Multitouch.Framework.WPF.Native.NativeMethods.POINT.op_Implicit(Multitouch.Framework.WPF.Native.NativeMethods.POINT)~System.Windows.Point">
            <summary>
            Implicit cast.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Multitouch.Framework.WPF.Native.NativeMethods.POINT.op_Implicit(System.Windows.Point)~Multitouch.Framework.WPF.Native.NativeMethods.POINT">
            <summary>
            Implicit cast.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.InkCanvas">
            <summary>
            <see cref="T:System.Windows.Controls.InkCanvas"/>
            </summary>
        </member>
        <member name="M:Multitouch.Framework.WPF.Controls.InkCanvas.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="E:Multitouch.Framework.WPF.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
            <summary>
            
            </summary>
        </member>
        <member name="E:Multitouch.Framework.WPF.Controls.InkCanvas.StrokeErasing">
            <summary>
            
            </summary>
        </member>
        <member name="E:Multitouch.Framework.WPF.Controls.InkCanvas.StrokesReplaced">
            <summary>
            
            </summary>
        </member>
        <member name="E:Multitouch.Framework.WPF.Controls.InkCanvas.EditingModeChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:Multitouch.Framework.WPF.Controls.InkCanvas.StrokeCollected">
            <summary>
            
            </summary>
        </member>
        <member name="E:Multitouch.Framework.WPF.Controls.InkCanvas.StrokeErased">
            <summary>
            
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.InkCanvas.DefaultDrawingAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.InkCanvas.EditingMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.InkCanvas.Strokes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Multitouch.Framework.WPF.Controls.InkCanvas.EraserShape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Multitouch.Framework.WPF.Controls.InkCanvas.InkCanvasStrokeErasingEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
    </members>
</doc>
